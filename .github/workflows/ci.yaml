name: ci

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: "1 1 * * 1,3,5"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  LATEST_TAG: scorix/goeccodes:latest

jobs:
  lint:
    name: lint
    permissions:
      contents: read
      # Optional: allow read access to pull request. Use with `only-new-issues` option.
      pull-requests: read
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.0"
      - uses: actions/checkout@v4

      - name: Install packages
        run: sudo apt install -y libeccodes-dev

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0
          args: --timeout=5m

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

  test:
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 30
    env:
      GOOS: "linux"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.0"

      - name: Install packages
        run: sudo apt install -y libeccodes-dev

      - name: Install go pkgs
        run: |
          go mod download

      - name: Test
        run: go test -race ./...

  build:
    name: build
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'master' }}
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Short Sha
        uses: benjlevesque/short-sha@v3.0
        id: short-sha

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.0"

      - name: Install go pkgs
        run: |
          go mod vendor

      - name: Generate short SHA
        uses: benjlevesque/short-sha@v3.0
        id: gen-short-sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: ${{ env.LATEST_TAG }}
